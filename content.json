{"meta":{"title":"Hexo","subtitle":null,"description":null,"author":"许乐岩","url":"http://yoursite.com","root":"/"},"pages":[{"title":"tags","date":"2019-08-10T14:47:40.000Z","updated":"2019-08-10T14:48:51.369Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"BinaryExponentiation","slug":"快速幂","date":"2019-08-11T03:43:52.000Z","updated":"2019-08-11T03:44:36.252Z","comments":true,"path":"2019/08/11/快速幂/","link":"","permalink":"http://yoursite.com/2019/08/11/快速幂/","excerpt":"","text":"快速幂比如2的11次方可以算作 2^(1011) = 2^(8)2^(2)2^(1)用一个临时变量存储当前的结果，每当遇到指数当前位为1的情况就和当前的2^(k)相乘，最后返回结果k用另外一个临时变量保存，每次和他自己相乘 123456789101112131415161718192021222324class Solution: def Power(self, base, exponent): if exponent == 0: return 1 exp = exponent #辅助变量 result = 1 temp = base if exp &lt; 0: if base == 0: raise RuntimeError(&apos;valueError&apos;) exp = - exp while exp != 0: if exp &amp; 1 == 1: result *= temp temp *= temp exp = exp &gt;&gt; 1 if exponent &lt; 0: return 1/result else: return result","categories":[],"tags":[{"name":"面试","slug":"面试","permalink":"http://yoursite.com/tags/面试/"}]},{"title":"test-page","slug":"test-page","date":"2019-08-10T07:15:59.000Z","updated":"2019-08-10T11:01:14.947Z","comments":true,"path":"2019/08/10/test-page/","link":"","permalink":"http://yoursite.com/2019/08/10/test-page/","excerpt":"","text":"","categories":[],"tags":[{"name":"test","slug":"test","permalink":"http://yoursite.com/tags/test/"}]}]}